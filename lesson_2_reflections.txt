What happens when you initialize a repository? Why do you need to do it?
A .git folder is created which is necessary to track your history.  You can run git status to see which files have changed since the last commit.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
It is the directory that holds your files before you commit so that you can commit multiple files at once.  This helps us as you want to checkin based on functionality, so when you have finished implementing new functionality, you add all of those files to the staging area and commit them all at once.

How can you use the staging area to make sure you have one commit per logical
change?
Grouping the files related to that logical change in your staging area then commit the whole staging area.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Each time you want to create a new feature, you create a new branch.  This way you can track your full development of that feature until development is complete and you can merge those changes with your master repository.

How do the diagrams help you visualize the branch structure?
They show you where a new branch has branched off from the branch you are comparing to by showing a physical branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
It merges the changes from both files into one branch.  The diagram shows when we merged and what commits were included in the merge as well as denoting from which branch those commits came from.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
It takes a lot of hassle out of manually comparing and merging files, but allows room for error and conflict by not merging manually.